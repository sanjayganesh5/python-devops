name: 1.0.1$(rev:.r)

trigger:
  - main

pool: Default

steps:
- task: CmdLine@2
  displayName: 'Print Build Directories'
  inputs:
    script: |
      echo BinariesDirectory: $(Build.BinariesDirectory)
      echo ArtifactStagingDirectory: $(Build.ArtifactStagingDirectory)
      echo SourcesDirectory: $(Build.SourcesDirectory)

- task: UsePythonVersion@0
  displayName: 'Install Python 3.10'
  inputs:
    versionSpec: '3.10'
    addToPath: true
    architecture: 'x64'

- task: CmdLine@2
  displayName: 'Install requirements'
  inputs:
    workingDirectory: '$(Build.SourcesDirectory)'
    script: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt

- task: CmdLine@2
  displayName: 'Generate Coverage Report'
  inputs:
    workingDirectory: '$(Build.SourcesDirectory)'
    script: |
      coverage run -m unittest discover
      coverage xml -o coverage-reports/coverage-serverless.xml

# Prepare Analysis Configuration task
- task: SonarQubePrepare@5
  inputs:
    SonarQube: 'Local SonarQubev2'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: $(sonarProjectKey)
    extraProperties: |
      sonar.exclusions='$(sonarExclusions)'

# Run Code Analysis task
- task: SonarQubeAnalyze@5

# Publish Quality Gate Result task
- task: SonarQubePublish@5
  inputs:
    pollingTimeoutSec: '300'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true
  displayName: 'Zip Artifact'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'application'
    publishLocation: 'Container'
  displayName: 'Publish Artifact'